---
c2_apache_port: 80
c2_apache_port_ssl: 443
c2_apache_proxy_timeout: 300
c2_apache_proxy_ssl_session_cache_timeout: 300
c2_apache_server_name: seetoo.tech
c2_apache_log_level: notice # error for production
c2_apache_certificate_common_name: "{{ hosts_domain|replace('.','_') }}" # seetoo_tech
c2_apache_certificate: "{{ apache_cacerts2_certificates|selectattr('common_name', 'equalto', c2_apache_certificate_common_name)|list|first }}"

c2_common_packages_extra_node:
  Ubuntu 18:
    - libapache2-mod-auth-openidc

apache_mods_enabled: # Debian/Ubuntu.
  - rewrite.load
  - ssl.load
  - proxy.load
  - proxy_http.load
  - socache_shmcb.load
  - headers.load
  - auth_openidc.load

apache_files_remove:
  - /etc/apache2/sites-enabled/000-default.conf

apache_files:
  generic:
    - dest: /etc/apache2/ports.conf
      content: |
        Listen {{ c2_apache_port }}
        <IfModule ssl_module>
            Listen {{ c2_apache_port_ssl }}
        </IfModule>
        <IfModule mod_gnutls.c>
            Listen {{ c2_apache_port_ssl }}
        </IfModule>
      notify: reload-apache
    - dest: /var/www/html/myapp/index.html
      content: |
        Hello world! ( protected by KeyCloak & mod_auth_openidc)
  reverse_proxy:
    - dest: /var/www/html/favicon.ico
      src: file:///vagrant/ansible_collections/c2platform/mw/roles/apache/files/favicon-blue.ico
    - dest: /etc/apache2/sites-enabled/reverse_proxy.conf
      notify: reload-apache
      content: |
        ProxyRequests Off
        ProxyPreserveHost On
        ProxyTimeout {{ c2_apache_proxy_timeout }}

        SSLSessionCache shmcb:/var/cache/mod_ssl/scache(512000)
        SSLSessionCacheTimeout {{ c2_apache_proxy_ssl_session_cache_timeout }}
        # SSLMutex default
        Mutex default
        SSLRandomSeed startup file://dev/urandom 256
        SSLRandomSeed connect builtin
        SSLCryptoDevice builtin

        <VirtualHost *:{{ c2_apache_port }}>
          ServerAdmin admin@{{ ansible_fqdn }}
          ServerName {{ c2_apache_server_name }}
          RewriteEngine On
          RewriteCond %{HTTPS} off
          RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=302,L,QSA]
        </VirtualHost>

        <VirtualHost *:{{ c2_apache_port_ssl }}>
          ServerAdmin admin@{{ ansible_fqdn }}
          ServerName {{ c2_apache_server_name }}

          SSLEngine on
          SSLProxyEngine on
          SSLProtocol -ALL +TLSv1.2
          SSLHonorCipherOrder On
          SSLCipherSuite ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
          SSLProxyVerify none
          SSLProxyCheckPeerCN off
          SSLProxyCheckPeerName off
          SSLProxyCheckPeerExpire off
          SSLCertificateKeyFile {{ c2_apache_certificate['deploy']['key']['dest'] }}
          SSLCertificateFile {{ c2_apache_certificate['deploy']['crt']['dest'] }}
          # SSLCertificateChainFile

          RequestHeader set X-Forwarded-Proto "https"
          RequestHeader set X-Forwarded-Port "{{ c2_apache_port_ssl }}"
          Header set X-Frame-Options SAMEORIGIN

          RewriteEngine on
          RewriteRule favicon.ico$ /favicon.ico [NC]
          ProxyPass /favicon.ico !

          DocumentRoot /var/www/html
          <Directory />
            AllowOverride all
            Allow from all
          </Directory>

          OIDCProviderMetadataURL https://seetoo.tech/auth/realms/seetoo/.well-known/openid-configuration
          OIDCClientID myapp-client
          OIDCClientSecret 1651ffdc-0bf8-470b-a0d7-0a3d4f766605
          OIDCRedirectURI https://{{ c2_apache_server_name }}/myapp/redirect_uri
          OIDCCryptoPassphrase 4CEew/3zLkQMtw==
          OIDCRemoteUserClaim email
          OIDCScope "openid email"
          OIDCPKCEMethod S256

          <Location /myapp>
             AuthType openid-connect
             Require valid-user
          </Location>

          ProxyRequests       Off
          AllowEncodedSlashes On
          ProxyPreserveHost   On

          ProxyPass           /auth  https://{{ hostvars[groups['keycloak'][0]].ansible_host }}:{{ c2_keycloak_bind_port_https }}/auth
          ProxyPassReverse    /auth  https://{{ hostvars[groups['keycloak'][0]].ansible_host }}:{{ c2_keycloak_bind_port_https }}/auth

          LogLevel {{ c2_apache_log_level }}
          ErrorLog {{ apache_settings['log_dir'] }}/ssl-{{ c2_apache_server_name|replace('.','-') }}.log
          CustomLog {{ apache_settings['log_dir'] }}/ssl-{{ c2_apache_server_name|replace('.','-') }}.log combined
        </VirtualHost>
